{"ast":null,"code":"\"use strict\";\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar resize_observer_polyfill_1 = __importDefault(require(\"resize-observer-polyfill\")); // Export hook\n\n\nfunction useDimensions(dependencies) {\n  if (dependencies === void 0) {\n    dependencies = [];\n  }\n\n  var _a = react_1.useState(null),\n      node = _a[0],\n      setNode = _a[1];\n\n  var ref = react_1.useCallback(function (newNode) {\n    setNode(newNode);\n  }, []); // Keep track of measurements\n\n  var _b = react_1.useState({\n    x: 0,\n    y: 0,\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    width: 0,\n    height: 0\n  }),\n      dimensions = _b[0],\n      setDimensions = _b[1]; // Define measure function\n\n\n  var measure = react_1.useCallback(function (innerNode) {\n    var rect = innerNode.getBoundingClientRect();\n    setDimensions({\n      x: rect.left,\n      y: rect.top,\n      left: rect.left,\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      width: rect.width,\n      height: rect.height\n    });\n  }, []);\n  react_1.useLayoutEffect(function () {\n    if (!node) {\n      return;\n    } // Set initial measurements\n\n\n    measure(node); // Observe resizing of element\n\n    var resizeObserver = new resize_observer_polyfill_1.default(function () {\n      measure(node);\n    });\n    resizeObserver.observe(node); // Cleanup\n\n    return function () {\n      resizeObserver.disconnect();\n    };\n  }, __spreadArrays([node, measure], dependencies));\n  return {\n    ref: ref,\n    dimensions: dimensions\n  };\n}\n\nexports.useDimensions = useDimensions;","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,0BAAA,GAAA,eAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA,C,CAaA;;;AACA,SAAgB,aAAhB,CACE,YADF,EAC0B;AAAxB,MAAA,YAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,EAAA;AAAwB;;AAElB,MAAA,EAAA,GAAA,OAAA,CAAA,QAAA,CAAA,IAAA,CAAA;AAAA,MAAC,IAAA,GAAA,EAAA,CAAA,CAAA,CAAD;AAAA,MAAO,OAAA,GAAA,EAAA,CAAA,CAAA,CAAP;;AACN,MAAM,GAAG,GAAG,OAAA,CAAA,WAAA,CAAY,UAAC,OAAD,EAA4B;AAClD,IAAA,OAAO,CAAC,OAAD,CAAP;AACD,GAFW,EAET,EAFS,CAAZ,CAHwB,CAOxB;;AACM,MAAA,EAAA,GAAA,OAAA,CAAA,QAAA,CAAA;QAAA;QAAA;WAAA;UAAA;YAAA;aAAA;YAAA;;AAAA,GAAA,CAAA;AAAA,MAAC,UAAA,GAAA,EAAA,CAAA,CAAA,CAAD;AAAA,MAAa,aAAA,GAAA,EAAA,CAAA,CAAA,CAAb,CARkB,CAmBxB;;;AACA,MAAM,OAAO,GAAG,OAAA,CAAA,WAAA,CAAY,UAAC,SAAD,EAAuB;AACjD,QAAM,IAAI,GAAG,SAAS,CAAC,qBAAV,EAAb;AACA,IAAA,aAAa,CAAC;AACZ,MAAA,CAAC,EAAE,IAAI,CAAC,IADI;AAEZ,MAAA,CAAC,EAAE,IAAI,CAAC,GAFI;AAGZ,MAAA,IAAI,EAAE,IAAI,CAAC,IAHC;AAIZ,MAAA,GAAG,EAAE,IAAI,CAAC,GAJE;AAKZ,MAAA,KAAK,EAAE,IAAI,CAAC,KALA;AAMZ,MAAA,MAAM,EAAE,IAAI,CAAC,MAND;AAOZ,MAAA,KAAK,EAAE,IAAI,CAAC,KAPA;AAQZ,MAAA,MAAM,EAAE,IAAI,CAAC;AARD,KAAD,CAAb;AAUD,GAZe,EAYb,EAZa,CAAhB;AAcA,EAAA,OAAA,CAAA,eAAA,CAAgB,YAAA;AACd,QAAI,CAAC,IAAL,EAAW;AACT;AACD,KAHa,CAKd;;;AACA,IAAA,OAAO,CAAC,IAAD,CAAP,CANc,CAQd;;AACA,QAAM,cAAc,GAAG,IAAI,0BAAA,CAAA,OAAJ,CAAmB,YAAA;AACxC,MAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAFsB,CAAvB;AAIA,IAAA,cAAc,CAAC,OAAf,CAAuB,IAAvB,EAbc,CAed;;AACA,WAAO,YAAA;AACL,MAAA,cAAc,CAAC,UAAf;AACD,KAFD;AAGD,GAnBD,EAmBC,cAAA,CAAA,CAAG,IAAH,EAAS,OAAT,CAAA,EAAqB,YAArB,CAnBD;AAqBA,SAAO;AACL,IAAA,GAAG,EAAA,GADE;AAEL,IAAA,UAAU,EAAA;AAFL,GAAP;AAID;;AA5DD,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar resize_observer_polyfill_1 = __importDefault(require(\"resize-observer-polyfill\"));\n// Export hook\nfunction useDimensions(dependencies) {\n    if (dependencies === void 0) { dependencies = []; }\n    var _a = react_1.useState(null), node = _a[0], setNode = _a[1];\n    var ref = react_1.useCallback(function (newNode) {\n        setNode(newNode);\n    }, []);\n    // Keep track of measurements\n    var _b = react_1.useState({\n        x: 0,\n        y: 0,\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        width: 0,\n        height: 0\n    }), dimensions = _b[0], setDimensions = _b[1];\n    // Define measure function\n    var measure = react_1.useCallback(function (innerNode) {\n        var rect = innerNode.getBoundingClientRect();\n        setDimensions({\n            x: rect.left,\n            y: rect.top,\n            left: rect.left,\n            top: rect.top,\n            right: rect.right,\n            bottom: rect.bottom,\n            width: rect.width,\n            height: rect.height\n        });\n    }, []);\n    react_1.useLayoutEffect(function () {\n        if (!node) {\n            return;\n        }\n        // Set initial measurements\n        measure(node);\n        // Observe resizing of element\n        var resizeObserver = new resize_observer_polyfill_1.default(function () {\n            measure(node);\n        });\n        resizeObserver.observe(node);\n        // Cleanup\n        return function () {\n            resizeObserver.disconnect();\n        };\n    }, __spreadArrays([node, measure], dependencies));\n    return {\n        ref: ref,\n        dimensions: dimensions\n    };\n}\nexports.useDimensions = useDimensions;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}